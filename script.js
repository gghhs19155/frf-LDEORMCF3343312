// === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
const SPREADSHEET_ID = '1QX07u6LhEViR6xrRh6xzywvgB2k5kYmjU3uRWvMhymI'; // ‚Üê –ó–ê–ú–ï–ù–ò!
const TELEGRAM_TOKEN = '8458389593:AAH_7DIWUV4EvwYNuMAW4fO2eBjk9Xhv0HM'; // ‚Üê –ó–ê–ú–ï–ù–ò!
const TELEGRAM_CHAT_ID = '7198093055'; // ‚Üê –ó–ê–ú–ï–ù–ò!

const KPTXT = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã

–ù–∞—à–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
‚úÖ –í—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã
‚úÖ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞
‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è 2 –≥–æ–¥–∞

–°–∫–∞—á–∞—Ç—å –ø–æ–ª–Ω—ã–π PDF: https://example.com/kp.pdf

–ñ–¥—ë–º –≤–∞—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞! üôå`;

// === DOM –≠–õ–ï–ú–ï–ù–¢–´ ===
const statusDot = document.getElementById('status-dot');
const statusText = document.getElementById('status-text');
const totalSentEl = document.getElementById('total-sent');
const conversionRateEl = document.getElementById('conversion-rate');
const phoneInput = document.getElementById('phone-input');
const addClientBtn = document.getElementById('add-client-btn');
const accountsList = document.getElementById('accounts-list');
const addAccountBtn = document.getElementById('add-account-btn');
const sendKpBtn = document.getElementById('send-kp-btn');
const checkStatusBtn = document.getElementById('check-status-btn');
const logList = document.getElementById('log-list');
const clearLogsBtn = document.createElement('button');

// === –†–ê–°–ü–ò–°–ê–ù–ò–ï ===
let scheduleStart = '09:00';   // –ù–∞—á–∞–ª–æ –æ–∫–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
let scheduleEnd = '18:00';     // –ö–æ–Ω–µ—Ü –æ–∫–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
let isScheduleActive = false;
let lastSendDate = null;       // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏ (–¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–µ–π)
let scheduleInterval = null;

// === –§–£–ù–ö–¶–ò–ò ===

// --- –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram ---
async function notifyCaptcha(phone) {
  try {
    const response = await fetch(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: `‚ö†Ô∏è CAPTCHA! –ù—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—Ö–æ–¥!\n\n–ö–ª–∏–µ–Ω—Ç: ${phone}\n\n–û—Ç–∫—Ä–æ–π WhatsApp Web –∏ –≤–æ–π–¥–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç!`
        })
      }
    );
    if (response.ok) logAction(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–∞–ø—á–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${phone}`);
    else logAction(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${response.status}`);
  } catch (e) {
    logAction(`‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${e.message}`);
  }
}

// --- –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ —Ä–∞—Å—Å—ã–ª–∫–∏ ---
async function notifyBeforeSend() {
  const msg = `‚è∞ –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –Ω–∞—á–Ω—ë—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞!\n\n–í—Ä–µ–º—è: ${scheduleStart}‚Äì${scheduleEnd}\n–ö–ª–∏–µ–Ω—Ç–æ–≤: ${clients.filter(c => c.status === '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω').length}\n\n–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –Ω–∞–∂–∞—Ç—å ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª –≤ —á–∞—Ç–∞—Ö.`;
  try {
    await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: TELEGRAM_CHAT_ID, text: msg })
    });
    logAction(`üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ 5 –º–∏–Ω –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram`);
  } catch (e) {
    logAction(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${e.message}`);
  }
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ ---
function checkInternetStatus() {
  isOnline = navigator.onLine;
  statusDot.classList.toggle('active', isOnline);
  statusText.textContent = isOnline ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '–û—Ñ—Ñ–ª–∞–π–Ω';
}

// --- –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ ---
function clearLogs() {
  logList.innerHTML = '<p class="empty-message">–ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π.</p>';
  logAction('üßπ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
}

// --- –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç ---
async function autoUpdateData() {
  logAction('üîÑ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
  await loadClients();
  await loadAccounts();
  updateStats();
  logAction('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
function logAction(action, details = '') {
  const now = new Date().toLocaleString('ru-RU', { hour12: false });
  const item = document.createElement('div');
  item.className = 'log-item';
  item.innerHTML = `
    <span class="text">${action}</span>
    <span class="time">${now}</span>
  `;
  logList.prepend(item);
  if (logList.children.length > 20) logList.removeChild(logList.lastChild);
}

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ ---
async function loadClients() {
  try {
    const response = await fetch(
      `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Clients?alt=json&key=${API_KEY}`
    );
    const data = await response.json();
    clients = data.values?.slice(1)?.map(row => ({
      phone: row[0],
      name: row[1] || '–ö–ª–∏–µ–Ω—Ç',
      addedAt: row[2],
      status: row[3] || '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'
    })) || [];
    renderClients();
    updateStats();
  } catch (e) {
    logAction('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤: ' + e.message);
  }
}

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ---
async function loadAccounts() {
  try {
    const response = await fetch(
      `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Accounts?alt=json&key=${API_KEY}`
    );
    const data = await response.json();
    accounts = data.values?.slice(1)?.map(row => ({
      id: row[0],
      phone: row[1],
      name: row[2] || '–ê–∫–∫–∞—É–Ω—Ç',
      isActive: row[3] === 'true'
    })) || [];
    activeAccount = accounts.find(a => a.isActive)?.phone || null;
    renderAccounts();
  } catch (e) {
    logAction('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ' + e.message);
  }
}

// --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ ---
function renderClients() {
  if (clients.length === 0) {
    accountsList.innerHTML = '<p class="empty-message">–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ.</p>';
    return;
  }
  accountsList.innerHTML = '';
  clients.forEach(client => {
    const item = document.createElement('div');
    item.className = 'account-item';
    item.innerHTML = `
      <span class="name">${client.name}</span>
      <span class="phone">${client.phone}</span>
      <span class="status ${client.status === '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω' ? 'active' : ''}">
        ${client.status}
      </span>
    `;
    item.addEventListener('click', () => {
      window.open(`https://wa.me/${client.phone.replace('+', '')}`, '_blank');
      logAction(`–û—Ç–∫—Ä—ã—Ç —á–∞—Ç: ${client.phone}`);
    });
    accountsList.appendChild(item);
  });
}

// --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ ---
function renderAccounts() {
  if (accounts.length === 0) {
    accountsList.innerHTML = '<p class="empty-message">–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π.</p>';
    return;
  }
  accountsList.innerHTML = '';
  accounts.forEach(acc => {
    const item = document.createElement('div');
    item.className = 'account-item';
    item.innerHTML = `
      <span class="name">${acc.name}</span>
      <span class="phone">${acc.phone}</span>
      <span class="status ${acc.isActive ? 'active' : ''}">${acc.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</span>
    `;
    item.addEventListener('click', async () => {
      for (const a of accounts) a.isActive = false;
      acc.isActive = true;
      await updateAccountStatus();
      renderAccounts();
      logAction(`–ê–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: ${acc.phone}`);
    });
    accountsList.appendChild(item);
  });
}

// --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ---
function updateStats() {
  const registered = clients.filter(c => c.status === '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω').length;
  const total = clients.length;
  totalSentEl.textContent = registered;
  conversionRateEl.textContent = total > 0 ? `${Math.round((registered / total) * 100)}%` : '0%';
}

// --- –ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ ---
async function addClient() {
  let input = phoneInput.value.trim();
  if (!input) { alert('–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–æ–º–µ—Ä!'); return; }

  const rawNumbers = input.split(/[\n,;:\t\s]+/).filter(n => n.trim() !== '');
  const validNumbers = [];
  const invalidNumbers = [];

  for (let raw of rawNumbers) {
    let cleaned = raw.replace(/[^\d+]/g, '');
    if (cleaned.startsWith('8') && cleaned.length === 11) cleaned = '+7' + cleaned.slice(1);
    else if (cleaned.length === 10 && !cleaned.startsWith('+')) cleaned = '+7' + cleaned;
    else if (cleaned.length === 11 && cleaned.startsWith('7') && !cleaned.startsWith('+')) cleaned = '+' + cleaned;
    else if (!cleaned.startsWith('+7') || cleaned.length !== 12) { invalidNumbers.push(raw); continue; }
    validNumbers.push(cleaned);
  }

  if (validNumbers.length === 0) {
    alert('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤!\n–ü—Ä–∏–º–µ—Ä—ã: +79991234567, 89991234567');
    return;
  }

  const batchValues = validNumbers.map(phone => {
    const name = '–ö–ª–∏–µ–Ω—Ç ' + (clients.length + validNumbers.indexOf(phone) + 1);
    const now = new Date().toISOString();
    return [phone, name, now, '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ'];
  });

  try {
    const response = await fetch(
      `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Clients:append?valueInputOption=RAW&key=${API_KEY}`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ values: batchValues })
      }
    );

    if (response.ok) {
      phoneInput.value = '';
      logAction(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ ${validNumbers.length} –∫–ª–∏–µ–Ω—Ç–æ–≤ (${invalidNumbers.length} –ø—Ä–æ–ø—É—â–µ–Ω–æ)`);
      if (invalidNumbers.length > 0) logAction(`‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${invalidNumbers.join(', ')}`);
      await loadClients();
      alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${validNumbers.length}\n‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${invalidNumbers.length}`);
    } else throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏');
  } catch (e) { alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: ' + e.message); }
}

// --- –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ö–ü –≤—Å–µ–º (—Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º) ---
async function sendKPToAll() {
  const registered = clients.filter(c => c.status === '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
  if (registered.length === 0) { alert('–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤!'); return; }

  if (!confirm(`–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ö–ü ${registered.length} –∫–ª–∏–µ–Ω—Ç–∞–º?\n\n–≠—Ç–æ –æ—Ç–∫—Ä–æ–µ—Ç –∏—Ö —á–∞—Ç—ã –≤ WhatsApp.`)) return;

  logAction(`üîÅ –†—É—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –ö–ü ${registered.length} –∫–ª–∏–µ–Ω—Ç–æ–≤`);

  registered.forEach(client => {
    const url = `https://wa.me/${client.phone.replace('+', '')}`;
    window.open(url, '_blank');
    logAction(`–û—Ç–∫—Ä—ã—Ç —á–∞—Ç: ${client.phone}`);
    notifyCaptcha(client.phone);
  });

  alert('–û—Ç–∫—Ä—ã—Ç–æ ' + registered.length + ' –æ–∫–æ–Ω WhatsApp. –í—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å".');
}

// --- –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ (–æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å) ---
async function startScheduledSend() {
  const now = new Date();
  const today = now.toISOString().split('T')[0]; // YYYY-MM-DD

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ —Å–µ–≥–æ–¥–Ω—è –±—ã–ª–∞ —Ä–∞—Å—Å—ã–ª–∫–∞
  if (lastSendDate === today) {
    logAction('‚ÑπÔ∏è –†–∞—Å—Å—ã–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Å–µ–≥–æ–¥–Ω—è.');
    return;
  }

  const registered = clients.filter(c => c.status === '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
  if (registered.length === 0) {
    logAction('‚ö†Ô∏è –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.');
    return;
  }

  logAction(`‚è∞ –ó–ê–ü–£–°–ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –†–ê–°–°–´–õ–ö–ò –≤ ${now.toLocaleTimeString()} (${registered.length} –∫–ª–∏–µ–Ω—Ç–æ–≤)`);

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç—ã
  registered.forEach(client => {
    const url = `https://wa.me/${client.phone.replace('+', '')}`;
    window.open(url, '_blank');
    logAction(`–û—Ç–∫—Ä—ã—Ç —á–∞—Ç: ${client.phone}`);
    notifyCaptcha(client.phone);
  });

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞ (–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏)
  setTimeout(() => {
    const input = document.querySelector('div[contenteditable="true"]');
    if (input) {
      input.focus();
      document.execCommand('insertText', false, KPTXT);
      logAction('üìù –¢–µ–∫—Å—Ç –ö–ü –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—Ç–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–≤–æ–µ –ø–æ–ª–µ –≤–≤–æ–¥–∞');
    }
  }, 3000);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–∞—Å—Å—ã–ª–∫–∏
  lastSendDate = today;
  localStorage.setItem('whatsappPro_lastSendDate', today);

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
  const msg = `üïí –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞.\n–í—Ä–µ–º—è: ${scheduleStart}‚Äì${scheduleEnd}\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${registered.length} –∫–ª–∏–µ–Ω—Ç–æ–≤.\n–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.`;
  fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ chat_id: TELEGRAM_CHAT_ID, text: msg })
  }).catch(e => logAction(`‚ùå –û—à–∏–±–∫–∞ Telegram: ${e.message}`));
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ —Å–µ–π—á–∞—Å –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω ---
function isInScheduleWindow() {
  const now = new Date();
  const currentTime = now.toTimeString().slice(0, 5); // HH:mm
  const start = scheduleStart;
  const end = scheduleEnd;

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –º–∏–Ω—É—Ç—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const nowMinutes = parseInt(currentTime.split(':')[0]) * 60 + parseInt(currentTime.split(':')[1]);
  const startMinutes = parseInt(start.split(':')[0]) * 60 + parseInt(start.split(':')[1]);
  const endMinutes = parseInt(end.split(':')[0]) * 60 + parseInt(end.split(':')[1]);

  // –ï—Å–ª–∏ –∫–æ–Ω–µ—Ü –º–µ–Ω—å—à–µ –Ω–∞—á–∞–ª–∞ ‚Äî –∑–Ω–∞—á–∏—Ç, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ—Å–µ–∫–∞–µ—Ç –ø–æ–ª–Ω–æ—á—å (–Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
  if (endMinutes <= startMinutes) {
    logAction('‚ö†Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å –ø–æ–ª–Ω–æ—á—å. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è.');
    return false;
  }

  return nowMinutes >= startMinutes && nowMinutes < endMinutes;
}

// --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É ---
function setupScheduler() {
  scheduleInterval = setInterval(() => {
    const now = new Date();
    const currentTime = now.toTimeString().slice(0, 5);

    if (!isScheduleActive) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Ö–æ–¥–∏—Ç –ª–∏ —Å–µ–π—á–∞—Å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω
    if (isInScheduleWindow()) {
      startScheduledSend();
    }

    // –ó–∞ 5 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    const fiveMinBefore = new Date(now.getTime() - 5 * 60000);
    const fiveMinStr = fiveMinBefore.toTimeString().slice(0, 5);
    if (currentTime === fiveMinStr && isInScheduleWindow()) {
      notifyBeforeSend();
    }

  }, 60000); // –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
}

// --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å—ã–ª–∫–∏ ---
function setScheduleTimes() {
  scheduleStart = document.getElementById('schedule-start').value;
  scheduleEnd = document.getElementById('schedule-end').value;
  localStorage.setItem('whatsappPro_scheduleStart', scheduleStart);
  localStorage.setItem('whatsappPro_scheduleEnd', scheduleEnd);
  logAction(`‚è±Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${scheduleStart} ‚Äì ${scheduleEnd}`);
}

// --- –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ ---
function toggleSchedule() {
  isScheduleActive = !isScheduleActive;
  const btn = document.getElementById('toggle-schedule');
  btn.textContent = isScheduleActive ? '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' : '‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ';
  btn.style.backgroundColor = isScheduleActive ? '#ff4757' : '#2ed573';
  localStorage.setItem('whatsappPro_scheduleActive', isScheduleActive);
  logAction(isScheduleActive ? '‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ' : 'üõë –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ');
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ---
async function checkRegistration(phone) {
  try {
    const res = await fetch(`https://wa.me/${phone.replace('+', '')}`, { method: 'HEAD' });
    return res.status === 200;
  } catch {
    return false;
  }
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ---
async function checkAllClients() {
  logAction('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...');
  for (let i = 0; i < clients.length; i++) {
    const client = clients[i];
    if (client.status === '–ù–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ') {
      const registered = await checkRegistration(client.phone);
      client.status = registered ? '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω' : '–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω';
      try {
        await fetch(
          `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Clients!D:D?range=D${i+2}&valueInputOption=RAW&key=${API_KEY}`,
          {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ values: [[client.status]] })
          }
        );
      } catch (e) {}
      clients[i] = client;
    }
  }
  renderClients();
  updateStats();
  logAction('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
}

// --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ ---
async function updateAccountStatus() {
  const values = accounts.map(a => [a.phone, a.isActive ? 'true' : 'false']);
  try {
    await fetch(
      `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/Accounts!B:C?valueInputOption=RAW&key=${API_KEY}`,
      {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ values })
      }
    );
  } catch (e) { logAction('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞'); }
}

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
async function init() {
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  scheduleStart = localStorage.getItem('whatsappPro_scheduleStart') || '09:00';
  scheduleEnd = localStorage.getItem('whatsappPro_scheduleEnd') || '18:00';
  isScheduleActive = localStorage.getItem('whatsappPro_scheduleActive') === 'true';
  lastSendDate = localStorage.getItem('whatsappPro_lastSendDate');

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
  checkInternetStatus();
  window.addEventListener('online', checkInternetStatus);
  window.addEventListener('offline', checkInternetStatus);

  // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  autoUpdateData();
  setInterval(autoUpdateData, 5 * 60 * 1000);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  await loadClients();
  await loadAccounts();
  updateStats();

  // –ö–Ω–æ–ø–∫–∏
  addClientBtn.addEventListener('click', addClient);
  sendKpBtn.addEventListener('click', sendKPToAll);
  checkStatusBtn.addEventListener('click', checkAllClients);
  addAccountBtn.addEventListener('click', () => {
    const phone = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞ WhatsApp (+79991234567):');
    if (phone && /^\+7\d{10}$/.test(phone)) {
      accounts.push({ id: Date.now(), phone, name: '–ê–∫–∫–∞—É–Ω—Ç ' + (accounts.length + 1), isActive: false });
      renderAccounts();
      logAction(`–ê–∫–∫–∞—É–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ${phone}`);
    }
  });

  // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
  clearLogsBtn.className = 'btn btn-red';
  clearLogsBtn.textContent = 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏';
  clearLogsBtn.style.marginTop = '16px';
  clearLogsBtn.onclick = clearLogs;
  logList.parentNode.insertBefore(clearLogsBtn, logList.nextSibling);

  // === –ù–û–í–´–ô –ò–ù–¢–ï–†–§–ï–ô–°: –†–ê–°–ü–ò–°–ê–ù–ò–ï –° –ù–ê–ß–ê–õ–û–ú –ò –ö–û–ù–¶–û–ú ===
  const scheduleSection = document.createElement('section');
  scheduleSection.innerHTML = `
    <h2>‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞</h2>
    <div style="display: flex; gap: 12px; margin-bottom: 12px; flex-wrap: wrap;">
      <div style="flex: 1; min-width: 140px;">
        <label style="display: block; color: #8d8d9c; font-size: 14px; margin-bottom: 4px;">–ù–∞—á–∞–ª–æ</label>
        <input type="time" id="schedule-start" value="${scheduleStart}" style="width: 100%; padding: 10px; border-radius: 8px; border: none;">
      </div>
      <div style="flex: 1; min-width: 140px;">
        <label style="display: block; color: #8d8d9c; font-size: 14px; margin-bottom: 4px;">–ö–æ–Ω–µ—Ü</label>
        <input type="time" id="schedule-end" value="${scheduleEnd}" style="width: 100%; padding: 10px; border-radius: 8px; border: none;">
      </div>
      <button id="toggle-schedule" class="btn ${isScheduleActive ? 'btn-red' : 'btn-green'}" style="min-width: 160px; align-self: flex-end;">
        ${isScheduleActive ? '‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' : '‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'}
      </button>
    </div>
    <p style="color: #8d8d9c; font-size: 14px; margin-top: 8px;">
      –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å —á–∞—Ç—ã –∏ –≤—Å—Ç–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç –ö–ü <strong>—Ç–æ–ª—å–∫–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –≤—Ä–µ–º–µ–Ω–∏</strong>.<br>
      –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç <strong>–æ–¥–∏–Ω —Ä–∞–∑ –≤ –¥–µ–Ω—å</strong> ‚Äî –¥–∞–∂–µ –µ—Å–ª–∏ –≤—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑.<br>
      –ó–∞ 5 –º–∏–Ω—É—Ç –¥–æ —Å—Ç–∞—Ä—Ç–∞ ‚Äî –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram.
    </p>
  `;
  document.querySelector('.controls').after(scheduleSection);

  // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
  document.getElementById('schedule-start').addEventListener('change', setScheduleTimes);
  document.getElementById('schedule-end').addEventListener('change', setScheduleTimes);
  document.getElementById('toggle-schedule').addEventListener('click', toggleSchedule);

  // –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  setupScheduler();

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  logAction('üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ. –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: ' + (isScheduleActive ? '–≤–∫–ª.' : '–≤—ã–∫–ª.') + ' ‚Äî ' + scheduleStart + ' ‚Äì ' + scheduleEnd);
}

init();